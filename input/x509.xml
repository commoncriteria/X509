<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../transforms/pp2html.xsl"?>
<?xml-model href="https://raw.githubusercontent.com/commoncriteria/transforms/master/schemas/CCPackage.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>


<Package name="X.509"
  xmlns="https://niap-ccevs.org/cc/v1"
  xmlns:sec="https://niap-ccevs.org/cc/v1/section"
  xmlns:h="http://www.w3.org/1999/xhtml">

  <project-notes>
   
 </project-notes>

  <PPReference>
   <ReferenceTable>
      <PPTitle>Functional Package for X.509</PPTitle>
      <PPVersion>1.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2023-12-14</PPPubDate>
      <Keywords>X.509; certificates; PKI</Keywords>
    </ReferenceTable>
  </PPReference>
  
  <RevisionHistory>
  	<entry>
      <version>1.0</version>
      <date>2023-12-14</date>
      <subject>Initial draft.</subject>
  	</entry>
  </RevisionHistory>
	
<!-- PP-style preferences   -->
  <pp-preferences>
<!--        <pp-pref name="display-audit-with-sfrs">0</pp-pref> -->
    <audit-events-in-sfrs/>
  </pp-preferences>

	
<!-- 			-->
<!-- 1.0 Introduction   -->
<!-- 			-->
<sec:Introduction>
	
<!-- 			-->
<!-- 1.1 Overview	-->
<!--			-->
  <sec:Overview>
        <h:p>
        	X.509 is an International Telecommunication Union Telecommunication Standardization Sector (ITU-T) standard for public key certificates.
        	Public key certificates are used as authentication mechanisms for trusted communications protocols and as integrity verification methods.
      	</h:p><h:p>
		This <h:i>Functional Package (FP) for X.509</h:i> provides a collection of X.509 
      		Security Functional Requirements (SFRs) and 
		Evaluation Activities (EAs) for the issuance, use, and validation of X.509 certificates. The intent 
		of this package is to provide Protection Profile (PP), collaborative Protection Profile (cPP), and Protection Profile Module (PP-Module) authors 
		with a readily consumable collection of SFRs and EAs to be integrated into
		their documents.  
        </h:p>
   </sec:Overview>

<!-- 			-->
<!-- 1.2 Terms		-->
<!-- 1.2.1 Common Criteria Terms -->
<!-- 1.2.2 Technology Terms -->
<!--			-->
   <tech-terms>
   	<suppress>Extended Package, TSF Interface</suppress>
   	<term full="Connection">The SSH transport layer between a client and a server.  Within a connection there can
			be multiple sessions. </term>
   	<term abbr="CA" full="Certification Authority"></term>
   	<term abbr="CMC" full="">Certificate Management over CMS</term>
   	<term abbr="CMS" full="Cryptographic Message Syntax"></term>
   	<term abbr="CRL" full="Certificate Revocation List"></term>
   	<term abbr="CSR" full="Certificate Signing Request"></term>
   	<term abbr="EA" full="Evaluation Activity"></term>
   	<term abbr="ECC" full="Elliptic Curve Cryptography"></term>
   	<term abbr="EKU" full="extendedKeyUsage"></term>
   	<term abbr="EST" full="Enrollment over Secure Transport"></term>
   	<term abbr="HTTP" full="Hypertext Transfer Protocol"></term>
   	<term abbr="KDF" full="Key Derivation Function"></term>
   	<term abbr="OCSP" full="Online Certificate Status Protocol"></term>
   	<term abbr="OID" full="Object Identifiers"></term>
   	<term abbr="OS" full="Operation System"></term>
   	<term abbr="RA" full="Registrat Authority"></term>
   	<term abbr="RFC" full="Request for Comment"></term>
   	<term abbr="TLS" full="Transport Layer Security"></term>
   	<term abbr="TOE" full="Target of Evaluation"></term>
   	<term abbr="TSF" full="TOE Security Functionality"></term>
   	<term abbr="TSS" full="TOE Summary Specification"></term>
   </tech-terms>
	
     
<!-- 			-->
<!-- 1.3 Compliant Targets of Evaluation	-->
<!--			-->
    <sec:toes title="Compliant Targets of Evaluation">
    	<comment>test</comment>
    	
		<h:p>The TOE in this FP is the portion of product that provides X.509 capabilities to other portions of the TSF, such as 
			functions for subject authentication, 
			trusted communications, validation of TOE software/firmware updates, or integrity verification as part of self-testing. 
			At minimum, a conformant TOE will include the ability to validate X.509 certificates presented to it, including but not limited to:
			<h:ul>
				<h:li>cryptographic validity of the digital signature</h:li>
				<h:li>time-based validity</h:li>
				<h:li>issuer-based validity</h:li>
				<h:li>revocation status using a Certificate Revocation List (CRL) or the Online Certificate Status Protocol (OCSP)</h:li>
				<h:li>validation that the certificate's extensions are consistent with its intended use</h:li>
			</h:ul>A conformant TOE must also define its intended uses for X.509 certificates and how to proceed when a certificate with undetermined 
			revocation status is presented to it.
			</h:p><h:p>
			This FP also defines mechanisms by which the TSF can generate a certificate signing request (CRL) for receiving a signed certificate from a 
			certification authority (CA). This may be generated either as a file that is provided to a CA manually or done via an active network connection to the 
			CA using Enrollment over Secure Transport (EST).
			</h:p><h:p>
			There may also be some situations where revocation checking is not performed. This FP defines an optional requirement for cases where exceptions
			to the claimed revocation functionality exist.
			</h:p><h:p>
			Lastly, the X.509 functionality defined by this FP is part of a TOE but is not considered to be an entire TOE on its own. X.509 functionality
			is implemented by a wide variety of technology products, some of which are standalone and some of which are dependent on a trusted platform
			(such as a software application on a general-purpose computer or mobile device). Auditable events have been defined for the SFRs in this FP for cases
			where the TOE boundary includes an audit function specified by FAU_GEN.1. A TOE that conforms to this FP may also implement or rely on its operational
			environment to implement appropriate management functionality for X.509 functionality that may include, but is not limited to:
			<h:ul>
				<h:li>Specifying root and intermediate CA certificates to be used as trust anchors.</h:li>
				<h:li>Generating certificate requests and loading signed certificates for the TOE's own use into its trust store.</h:li>
				<h:li>Specifying the revocation method that is used.</h:li>
				<h:li>Configuring how the TOE behaves in the event that certificate revocation information is unavailable.</h:li>
			</h:ul>
			Any conformant TOE must consider the extent to which X.509 functionality must be managed and ensure that appropriate management claims are made in 
			the TOE's Security Target or that the TOE conforms to a PP that allows a trusted platform in its operational environment to implement them.
			</h:p><h:p>
			This FP describes the extended security functionality of X.509 in terms of <xref g="CC"/>. </h:p>
		<h:p>The contents of this FP must be appropriately incorporated into a PP, cPP, or PP-Module. When this package 
		is so incorporated, the ST must include selection-based requirements in accordance with the selections or assignments 
		indicated in the incorporating document.
		</h:p><h:p>The PP, cPP, or PP-Module that instantiates this Package must typically include the following components in order to satisfy 
		dependencies of this Package. It is the responsibility of the PP, cPP, or PP-Module author who incorporates this FP to 
		ensure that dependence on these components is satisfied, either by the TOE or by assumptions about its OE.
		</h:p><h:p>An ST must identify the applicable version of the PP, cPP, or PP-Module, and of this
		FP in its conformance claims.</h:p>
		<componentsneeded>
			<componentneeded>
				<componentid>FCS_CKM.1</componentid>
				<notes>To support public/private key pair generation for creating an X.509 certificate signing request (CSR), 
					the PP or PP-Module must
					include FCS_CKM.1 and specify the corresponding algorithms.</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FCS_COP.1</componentid>
				<notes>
					To support the cryptography needed for X.509 validation, the PP or PP-Module must include FCS_COP.1 
					(iterating as needed) to specify appropriate digital signature validation and hash algorithms for the
					X.509 certificates presented to the TOE.
				</notes>
			</componentneeded>
			<!-- The components in the PP or PP-Module that need this SFR should require it;
			it is not _directly_ depended upon by this Package.-->
			<componentneeded>
				<componentid>FCS_RBG.1</componentid>
				<notes>To support random bit generation needed for public/private key pair generation,
					the PP or PP-Module must include FCS_RBG.1 or an extended SFR that defines comparable functionality.</notes>
			</componentneeded>
			<componentneeded>
			<componentid>FPT_STM.1</componentid>
				<notes>To support validating whether a presented X.509 certificate is expired, 
					the PP or PP-Module must include FPT_STM.1 or some other requirement that ensures reliable system time.  
					</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FTP_PRO.1</componentid>
				<notes>To support EST when claimed, the PP or PP-Module must include 
					FTP_PRO.1 or equivalent extended SFRs. To define the HTTPS and TLS protocol implementation for these communications.
					Note that support for EST is not mandatory.
				</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FTP_PRO.2</componentid>
				<notes>To support EST when claimed, the PP or PP-Module must include 
					FTP_PRO.2 or equivalent extended SFRs. To define the HTTPS and TLS protocol implementation for these communications.
					Note that support for EST is not mandatory.
				</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FTP_PRO.3</componentid>
				<notes>To support EST when claimed, the PP or PP-Module must include 
					FTP_PRO.3 or equivalent extended SFRs. To define the HTTPS and TLS protocol implementation for these communications.
					Note that support for EST is not mandatory.
				</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FTP_ITC.1</componentid>
				<notes>To support EST when claimed, the PP or PP-Module must include FTP_ITC.1 to define a trusted channel
					between the TOE and a trusted certification authority (CA).
					Note that support for EST is not mandatory.
				</notes>
			</componentneeded>
			
		</componentsneeded>
	</sec:toes>
</sec:Introduction>
  
<!-- 			-->
<!-- 2.0 Conformance Claims	-->
<!--			-->
<sec:Conformance_Claims boilerplate="no">
	<cclaims>
		<cclaim name="Conformance Statement">
			<description>An ST must claim exact conformance to this FP.
				<h:br/><h:br/>
				The evaluation methods used for evaluating the TOE are a combination of the workunits defined in <xref to="bibCEM"/> as well as the
				EAs for ensuring that individual SFRs have a sufficient level of supporting evidence in the ST and 
				guidance documentation, and have been sufficiently tested by the laboratory as part of completing ATE_IND.1.
			</description>
		</cclaim>
		<cclaim name="CC Conformance Claims">
			<description>This FP is conformant to Part 2 (extended) of Common Criteria CC:2022, Revision 1. FPs
			do not contain any SARs so no CC Part 3 claim is made.</description>
		</cclaim>
		<cclaim name="PP Claim">
			<description>This FP does not claim conformance to any PP.<h:br/><h:br/>
				PP-Configurations do not require enumeration of FPs; this FP can be claimed in any PP-Configuration that includes
				a PP or PP-Module that permits the FP to be claimed as part of it.
			</description>
		</cclaim>
		<cclaim name="Package Claim">
			<description>This FP does not claim conformance to any other FPs.
			</description>
		</cclaim>
	</cclaims>
</sec:Conformance_Claims>

<!-- 				-->
<!-- 3.0 Security Requirements 	-->
<!--				-->
	
<!-- 			-->
<!-- 3.1 Security Functional Requirements 	-->
<!--			-->
<sec:Security_Functional_Requirements>

	<!-- Audit table for mandatory requirements  -->
	<sec:ss-audit-table title="Auditable Events for Mandatory SFRs">
		<h:p>
			The auditable events specified in this Package are included in a ST 
			if the incorporating PP, cPP, or PP-Module supports audit event reporting through FAU_GEN.1,
			and if all other criteria in the incorporating PP or PP-Module are met.
		</h:p>
		<audit-table id="at-man-audit" table="mandatory">
			<h:div class="table-caption"><ctr ctr-type="Table" id="atref-mandatory">: Auditable Events for Mandatory SFRs</ctr></h:div>
		</audit-table>
	</sec:ss-audit-table>
	  
	<!-- 			-->
	<!-- 3.1.1 FIA: Identification and Authentication -->
	<!--			-->
	<sec:fia title="Identification and Authentication (FIA)">

		<ext-comp-def fam-id="FIA_X509_EXT" title="X.509 Certificate Handling">
			<fam-behavior>This family defines the behavior and use of X.509 certificates for functions to
				be performed by the TSF. Components in this family require validation of certificates
				according to a specified set of rules, use of certificates for authentication for protocols and
				integrity verification, generation of certificate requests, certificate enrollment, and revocation checking behavior.
				
			</fam-behavior>
		</ext-comp-def>
		
		<f-component name="X.509 Certificate Validation" cc-id="fia_x509_ext.1">
			<f-element id="fia-x509-ext-1e1">
				<title>
					The <selectables>
						<selectable>TSF</selectable>
						<selectable>TOE platform</selectable></selectables>
					shall validate certificates in accordance with the following rules:
					<h:ul> 
						<h:li>RFC 5280 certificate validation and certificate path validation supporting a minimum path length of 
							<assignable>positive integer</assignable> 
							shall be used.</h:li>
						<h:li>The certification path shall terminate with a trusted CA certificate designated as a trust anchor.</h:li>
						<h:li>All CA certificates in the certification path shall contain the basicConstraints extension with 
							the CA flag set to TRUE.</h:li>
						<h:li>The revocation status of the certificate shall be validated using <selectables linebreak="yes">
							<selectable>The Online Certificate Status Protocol (OCSP) as specified in RFC 6960</selectable>
							<selectable>Certificate Revocation Lists (CRL) as specified in RFC 5280 and refined by RFC 8603</selectable>
							<selectable>An OCSP TLS Status Request Extension (OCSP stapling) as specified in RFC 6066</selectable>
							<selectable>An OCSP TLS Multiple Certificate Status Request Extension (OCSP multi-stapling) as specified
								in RFC 6961</selectable>
						</selectables> and with <selectables>
							<selectable>no exceptions</selectable>
							<selectable>exceptions defined in <xref to="fia_x509_ext.5"/></selectable></selectables></h:li>
						<h:li>The TSF shall validate the extendedKeyUsage (EKU) field according to the following rules: 
							<selectables linebreak="yes">
							<selectable>Certificates used for trusted updates and executable code integrity verification shall have the
								Code Signing Purpose (id-kp 3 with OID 1.3.6.1.5.5.7.3.3)</selectable>
							<selectable>Client certificates presented for TLS shall have the Client Authentication purpose
								(id-kp 2 with OID 1.3.6.1.5.5.7.3.2)</selectable>
							<selectable>Server certificates presented for TLS shall have the Server Authentication purpose
										(id-kp 1 with OID 1.3.6.1.5.5.7.3.1)</selectable>
							<selectable>Delegated OCSP signer’s certificates presented for OCSP responses shall have the OCSP
										Signing purpose (id-kp 9 with OID 1.3.6.1.5.5.7.3.9)</selectable>
							<selectable>Server certificates presented for EST shall have the CMC Registration Authority (RA)
										purpose (id-kp-cmcRA with OID 1.3.6.1.5.5.7.3.28)</selectable>
							<selectable><assignable>other expected EKU values</assignable></selectable></selectables>
						</h:li>
							<h:li><selectables>
							<selectable>no other rules</selectable>
							<selectable><assignable>additional certificate evaluation rules</assignable></selectable></selectables>
						</h:li>
								</h:ul>
					</title>
				<aactivity>
					<TSS>
						<h:p>The evaluator shall ensure the TSS describes where the check of validity of the certificates takes place
							(both in terms of circumstances as well as whether the TSF or the TOE platform is responsible for certificate
							validation in each case) and that the TSS identifies the rules for certificate field checking. In any case
							where a certificate is used in an authentication step or for validating the integrity of trusted updates,
							it is expected that revocation checking will be performed. If X.509 certificates are used for power-on
							self-tests, it is not necessary to verify certificate revocation status in this situation.
						</h:p>
						
						<h:p>The TSS shall describe when revocation checking is performed and on what certificates. If the revocation
							checking during authentication is handled differently depending on whether a full certificate chain or only
							a leaf certificate is being presented, any differences must be summarized in the TSS and explained in the
							operational guidance.
						</h:p>
					</TSS>
					<Guidance>
						<h:p>
							The evaluator shall ensure that the operational guidance describes where the check of validity of the
							certificates takes place and any of the rules for extendedKeyUsage fields.
						</h:p>
						
						<h:p>
							If the revocation checking method is configurable, the evaluator shall ensure that the operational guidance describes
							how to specify the revocation checking method used, as well as any other implementation details for configuration of
							the revocation check function.
						</h:p>
					</Guidance>
					<Tests>
						<h:p>
							The tests described must be performed in conjunction with the other certificate services evaluation
							activities, including the functions in <xref to="fia-x509-ext-2e1"/>. The tests for the extendedKeyUsage rules are
							performed in conjunction with the uses that require those rules. If the TSF supports chains of length four
							or greater, the evaluator shall create a chain of at least four certificates: the node certificate to be
							tested, two Intermediate CAs, and the root CA. If the TSF supports chains of length three, then only one
							intermediate CA shall be created. If the TSF supports a maximum chain of length two, then a chain with no
							Intermediate CA shall be created.
						</h:p>
						<testlist>
							<test> 
						<h:p>
							The evaluator shall demonstrate that validating a certificate without a valid certification path results
							in the function failing, for each of the following reasons, in turn:
						</h:p>
							<h:ul>
								<h:li>
									Establishing a certificate path in which one of the issuing certificates is not a CA certificate
								</h:li>
								<h:li>
									Omitting the basicConstraints field in one of the issuing certificates
								</h:li>
								<h:li>
									Setting the basicConstraints field in an issuing certificate to have CA=False
								</h:li>
								<h:li>
									Omitting the CA signing bit of the key usage field in an issuing certificate, and
								</h:li>
								<h:li>
									Setting the path length field of a valid CA field to a value strictly less than the certificate path
								</h:li>
							</h:ul>
						<h:p>
							The evaluator shall then establish a valid certificate path consisting of valid CA certificates, and
							demonstrate that the function succeeds. The evaluator shall then remove trust in one of the CA
							certificates, and show that the function fails.
						</h:p>
							</test>
							<test>
								<h:p>
									The evaluator shall demonstrate that validating an expired certificate results in the function failing.
								</h:p>
							</test>
							<test>The evaluator shall test that the TOE can properly handle revoked certificates, conditional on
								whether CRL, OCSP, OCSP Stapling or OCSP Multi-stapling is selected; if multiple methods are selected,
								then the following tests shall be performed for each method:
								<h:ul>
									<h:li>
										The evaluator shall test revocation of the node certificate.
									</h:li>
									<h:li>
										The evaluator shall also test revocation of an intermediate CA certificate (i.e., the intermediate
										CA certificate should be revoked by the root CA), if intermediate CA certificates are supported.
										If OCSP stapling per RFC 6066 is the only supported revocation method, this test is omitted.
									</h:li>
									<h:li>
										The evaluator shall ensure that a valid certificate is used and that the validation function succeeds. The
										evaluator then attempts the test with a certificate that has been revoked (for each method chosen in the selection)
										to ensure when the certificate is no longer valid that the validation function fails.
									</h:li>
								</h:ul>
							</test>
							<test>
								<h:p>
									If any OCSP option is selected, the evaluator shall ensure the TSF has no other source of revocation
									information available and configure the OCSP server or use a man-in-the-middle tool to present an
									OCSP response signed by a certificate that does not have the OCSP signing purpose and which is the
									only source of revocation status information advertised by the CA issuing the certificate being
									validated. The evaluator shall verify that validation of the OCSP response fails and that the TOE
									treats the certificate being checked as invalid and rejects the connection. If CRL is selected, the
									evaluator shall likewise configure the CA to be the only source of revocation status information,
									and sign a CRL with a certificate that does not have the cRLsign key usage bit. The evaluator shall
									verify that validation of the CRL fails and that the TOE treats the certificate being checked as
									invalid and rejects the connection.
								</h:p>
								
								<h:p>
									Note: The intent of this test is to ensure a TOE does not trust invalid revocation status information.
									A TOE receiving invalid revocation status information from the only advertised certificate status
									provider should treat the certificate whose status is being checked as invalid. This should generally
									be treated differently from the case where the TSF is not able to establish a connection to check
									revocation status information, but it is acceptable that the TSF ignore any invalid information and
									attempt to find another source of revocation status (another advertised provider, a locally configured
									provider, or cached information) and treat this situation as not having a connection to a valid
									certificate status provider.
								</h:p>
							</test>
							<test>
								<h:p>
									The evaluator shall modify any byte in the first eight bytes of the certificate and demonstrate that
									the certificate fails to validate (i.e., the certificate will fail to parse correctly).
								</h:p>
							</test>
							<test>
								<h:p>
									The evaluator shall modify any byte in the last byte of the certificate and demonstrate that the
									certificate fails to validate (i.e., the signature on the certificate will not validate).	
								</h:p>
							</test>							
							<test>
								<h:p>
									The evaluator shall modify any byte in the public key of the certificate and demonstrate that the
									certificate fails to validate (i.e., the signature on the certificate will not validate).
								</h:p>
							</test>
							<test>
								<h:p>
									(Conditional on support for EC certificates) The evaluator shall establish a valid, trusted
									certificate chain consisting of an EC leaf certificate, an EC Intermediate CA certificate not
									designated as a trust anchor, and an EC certificate designated as a trusted anchor, where the
									elliptic curve parameters are specified as a named curve. The evaluator shall confirm that the TOE
									validates the certificate chain.	
								</h:p>
							</test>
							<test>
								<h:p>
									(Conditional on support for EC certificates) The evaluator shall replace the intermediate
									certificate in the certificate chain for the previous test with a modified certificate, where the
									modified intermediate CA has a public key information field where the EC parameters uses an explicit
									format version of the Elliptic Curve parameters in the public key information field of the
									intermediate CA certificate from Test 8a, and the modified Intermediate CA certificate is signed by
									the trusted EC root CA,  but having no other changes. The evaluator shall confirm the TOE treats the
									certificate as invalid.
								</h:p>
							</test>
							<test>
								<h:p>
									(conditional on support for EC certificates) The evaluator shall establish a subordinate CA
									certificate, where the elliptic curve parameters are specified as a named curve, that is signed by a
									trusted EC root CA. The evaluator shall attempt to load the certificate into the trust store and
									observe that it is accepted into the TOE's trust store. The evaluator shall then establish a
									subordinate CA certificate that uses an explicit format version of the elliptic curve parameters,
									and that is signed by a trusted EC root CA. The evaluator shall attempt to load the certificate into
									the trust store and observe that it is rejected, and not added to the TOE's trust store.
								</h:p>
							</test>
						</testlist>
					</Tests>
				</aactivity>
				
			</f-element>
			
			
			<audit-event>
				<audit-event-descr>Unsuccessful attempt to validate a certificate.</audit-event-descr>
				<audit-event-info>Reason for failure.</audit-event-info>
			</audit-event>
		</f-component>
		
		<f-component name="X.509 Certificate Usage" cc-id="fia_x509_ext.2">
			<f-element id="fia-x509-ext-2e1">
				<title>The
					<selectables>
						<selectable>TSF</selectable>
						<selectable>TOE platform</selectable></selectables>
					shall use X.509v3 certificates as defined by RFC 5280 to support authentication for 
					<selectables linebreak="yes">
						<selectable><assignable>trusted communications protocol</assignable></selectable>
						<selectable>no protocols</selectable></selectables>
					and <selectables>
						<selectable>code signing for system software updates</selectable>
						<selectable>code signing for software integrity testing</selectable>
						<selectable>integrity verification for TSF protected data</selectable>
						<selectable>Administrator authentication</selectable>
						<selectable>user authentication</selectable>
						<selectable><assignable>other uses</assignable></selectable>
						<selectable>no additional uses</selectable></selectables>.
				</title>
			</f-element>
			<f-element id="fia-x509-ext-2e2">
				<title>When the
					<selectables>
						<selectable>TSF</selectable>
						<selectable>TOE platform</selectable></selectables>
					cannot establish a connection to determine the validity of a certificate, the TSF shall
					<selectables>
						<selectable>allow the Administrator to choose whether to accept the certificate in these cases</selectable>
						<selectable>accept the certificate</selectable>
						<selectable>not accept the certificate</selectable></selectables>.
				</title>
			<aactivity> 
					<TSS>
						<h:p>
							The evaluator shall check the TSS to ensure that it describes how the TOE chooses which certificates to use.
						</h:p>
						
						<h:p>
							The evaluator shall examine the TSS to confirm that it describes the behavior of the TOE when a connection
							cannot be established during the validity check of a certificate. The evaluator shall verify that any
							distinctions between trusted channels are described.
						</h:p>
					</TSS>
					<Guidance>
						<h:p>
							The evaluator shall verify that the operational guidance determines the TOE chooses which certificates to use
							for authentication.
						</h:p>
						
						<h:p>
							If the TSS claims that the Administrator can specify the default action in the case of an undetermined
							revocation status, the evaluator shall ensure that the guidance documentation contains instructions on how
							this configuration action is performed.
						</h:p>
					</Guidance>
					<Tests>
						<h:p>
							The evaluator shall perform the following test for each trusted channel:
						</h:p>
						<testlist>
							<test>
								<h:p>
									The evaluator shall demonstrate that using a valid certificate that requires certificate validation
									checking to be performed in at least some part by communicating with a non-TOE IT entity. The
									evaluator shall then manipulate the environment so that the TOE is unable to verify the validity of
									the certificate and observe that the action selected in <xref to="fia-x509-ext-2e2"/> is performed. If the selected
									action is administrator-configurable, then the evaluator shall follow the guidance documentation to
									determine that all supported administrator-configurable options behave in their documented manner.
								</h:p>
							</test>
							<test>
								<h:p>
									The evaluator shall demonstrate that an invalid certificate that requires certificate validation
									checking to be performed in at least some part by communicating with a non-TOE IT entity cannot be
									accepted.
								</h:p>
								
								<h:p>
									If the TSF uses X.509 certificates for Administrator or user authentication, the evaluator shall
									generate an X.509v3 certificate for a user with the Client Authentication EKU field set. The
									evaluator will provision the OS for authentication with the X.509v3 certificate.
								</h:p>
								
								<h:p>
									The evaluator will ensure that the certificates are validated by the OS per <xref to="fia-x509-ext-1e1"/> and then
									conduct the following two tests:
								</h:p>
							</test>
							<test>
								<h:p>
									The evaluator shall attempt to authenticate to the TOE using a valid X.509v3 certificate. The
									evaluator shall ensure that the authentication attempt is successful.
								</h:p>
							</test>
							<test>
								<h:p>
									The evaluator shall generate a second certificate that is identical to the first except for the public
									key and any values derived from the public key. The evaluator shall attempt to authenticate to the
									TOE with this certificate. The evaluator shall ensure that the authentication attempt is unsuccessful.
								</h:p>
							</test>
						</testlist>
					</Tests>
			</aactivity>
			</f-element>
			<audit-event/>
		</f-component>
		
		<f-component name="X.509 Certificate Requests" cc-id="fia_x509_ext.3">
			<f-element id="fia-x509-ext-3e1">
				<title>The
					<selectables>
						<selectable>TSF</selectable>
						<selectable>TOE platform</selectable></selectables>
					shall generate a Certificate Request as specified by RFC 2986 and be able to provide the following information in the
					request: public key and 
					<selectables>
						<selectable>device-specific information</selectable>
						<selectable>Common Name</selectable>
						<selectable>Organization</selectable>
						<selectable>Organizational Unit</selectable>
						<selectable>Country</selectable>
						<selectable><assignable>other information</assignable></selectable></selectables>.
				</title>
			</f-element>
			<f-element id="fia-x509-ext-3e2">
				<title>The
					<selectables>
						<selectable>TSF</selectable>
						<selectable>TOE platform</selectable></selectables>
					shall validate the chain of certificates from the Root CA upon receiving the CA Certificate Response.
				</title>
				<aactivity> 
					<TSS>
						<h:p>
							If the ST author selects "device-specific information" or “other information,” the evaluator shall verify
							that the TSS contains a description of the device-specific fields used in certificate requests.
						</h:p>
					</TSS>
					<Guidance>
						<h:p>
							The evaluator shall check to ensure that the guidance documentation contains instructions on requesting
							certificates from a CA, including generation of a Certificate Request. If the ST author selects "Common Name",
							"Organization", "Organizational Unit", or "Country", the evaluator shall ensure that this guidance includes
							instructions for establishing these fields before creating the Certificate Request.
						</h:p>
					</Guidance>
					<Tests>
						<testlist>
							<test>
								<h:p>
									The evaluator shall use the guidance documentation to cause the TOE to generate a Certificate Request.
									The evaluator shall capture the generated message and ensure that it conforms to the format specified.
									The evaluator shall confirm that the Certificate Request provides the public key and other required
									information, including any necessary user-input information.
								</h:p>
							</test>
							<test>
								<h:p>
									The evaluator shall demonstrate that validating a response message to a Certificate Request without a
									valid certification path results in the function failing. The evaluator shall then load one or more
									certificates into the trust store used by the TOE that are used as CAs to validate the certificate
									response message and demonstrate that the function succeeds.
								</h:p>
							</test>
						</testlist>
					</Tests>
				</aactivity>
			</f-element>
									
			<audit-event/>
		</f-component>
		
		<f-component name="X.509 Certificate Enrollment" cc-id="fia_x509_ext.4">
			<f-element id="fia-x509-ext-4e1">
				<title>The TSF shall use the Enrollment over Secure Transport (EST) protocol as specified in RFC 7030 to request
					certificate enrollment using the simple enrollment method described in RFC 7030 Section 4.2.
				</title>
			</f-element>
			<f-element id="fia-x509-ext-4e2">
				<title>The TSF shall be capable of authenticating EST requests using an existing certificate and corresponding private
					key as specified by RFC 7030 Section 3.3.2.
				</title>
			</f-element>
			<f-element id="fia-x509-ext-4e3">
				<title>The TSF shall be capable of authenticating EST requests using HTTP Basic Authentication with a username and
					password as specified by RFC 7030 Section 3.2.3.
				</title>
			</f-element>
			<f-element id="fia-x509-ext-4e4">
				<title>The TSF shall perform EST server authentication using an Explicit Trust Anchor following the rules described in
					RFC 7030, section 3.6.1.
				</title>
			</f-element>
			<f-element id="fia-x509-ext-4e5">
				<title>The TSF shall be capable of requesting server-provided private keys as specified in RFC 7030 Section 4.4.
				</title>
			</f-element>
			<f-element id="fia-x509-ext-4e6">
				<title>The TSF shall be capable of updating its EST-specific Trust Anchor Database using the "Root CA Key Update" process
					described in RFC 7030 Section 4.1.3.					
				</title>
			</f-element>
			<f-element id="fia-x509-ext-4e7">
				<title>The TSF shall generate a Certificate Request Message for EST as specified in RFC 2986 and be able to provide the
					following information in the request: public key and
					<selectables>
						<selectable>device-specific information</selectable>
						<selectable>Common Name</selectable>
						<selectable>Organization</selectable>
						<selectable>Organizational Unit</selectable>
						<selectable>Country</selectable>
						<selectable><assignable>other information</assignable></selectable></selectables>.
				</title>
			</f-element>
			<f-element id="fia-x509-ext-4e8">
				<title>The TSF shall validate the chain of certificates from the Root CA certificate in the Trust Anchor Database to
					the EST Server CA certificate upon receiving a CA Certificate Response.				
				</title>
				<aactivity>
					<TSS>
						<h:p>
							There are no TSS EAs for this component.
						</h:p>
					</TSS>
					<Guidance>
						<h:p>
							The evaluator shall check to ensure that the operational guidance contains instructions on requesting
							certificates from an EST server, including generating a Certificate Request Message.
						</h:p>
					</Guidance>
					<Tests>
						<testlist>
							<test>
						<h:p>
							The evaluator shall use the operational guidance to cause the TOE to request certificate enrollment from an
							EST server using the simple enrollment method described in RFC 7030 Section 4.2. When doing this, the
							evaluator shall ensure that the certificate request to the server is authenticated using an existing
							certificate and private key as described by RFC 7030 Section 3.3.2. The evaluator shall confirm that the
							resulting certificate is successfully obtained and installed in the TOE key store.
						</h:p>	
							</test>
							<test>
								<h:p>
									The evaluator shall use the operational guidance to cause the TOE to request certificate enrollment
									from an EST server using the simple enrollment method described in RFC 7030 Section 4.2. When doing
									this, the evaluator shall ensure that the certificate request to the server is authenticated using a
									username and password as described by RFC 7030 Section 3.2.3. The evaluator shall confirm that the
									resulting certificate is successfully obtained and installed in the TOE key store.
								</h:p>	
							</test>
							<test>
								<h:p>
									The evaluator shall modify the EST server to return a certificate containing a different public key
									than the key included in the TOE’s certificate request. The evaluator shall use the operational
									guidance to cause the TOE to request certificate enrollment from an EST server. The evaluator shall
									confirm that the TOE does not accept the resulting certificate since the public key in the issued
									certificate does not match the public key in the certificate request.
								</h:p>	
							</test>
							<test>
								<h:p>
									The evaluator shall configure the EST server or use a man-in-the-middle tool to present a server
									certificate to the TOE that is present in the TOE general Trust Anchor Database but not its
									EST-specific Trust Anchor Database. The evaluator shall cause the TOE to request certificate
									enrollment from the EST server. The evaluator shall verify that the request is not successful.
								</h:p>	
							</test>
							<test>
								<h:p>
									The evaluator shall configure the EST server or use a man-in-the-middle tool to present an invalid
									certificate. The evaluator shall cause the TOE to request certificate enrollment from the EST server.
									The evaluator shall verify that the request is not successful The evaluator shall configure the EST
									server or use a man-in-the-middle tool to present a certificate that does not have the CMC RA purpose
									and verify that requests to the EST server fail. The tester shall repeat the test using a valid
									certificate and a certificate that contains the CMC RA purpose and verify that the certificate
									enrollment requests succeed.
								</h:p>	
							</test>
							<test>
								<h:p>
									The evaluator shall use a packet sniffing tool between the TOE and an EST server. The evaluator shall
									turn on the sniffing tool and cause the TOE to request certificate enrollment from an EST server.
									The evaluator shall verify that the EST protocol interaction occurs over a Transport Layer Security
									(TLS) protected connection. The evaluator is not expected to decrypt the connection but rather
									observe that the packets conform to the TLS protocol format.
								</h:p>	
							</test>
							<test>
								<h:p>
									The evaluator shall use the operational guidance to cause the TOE to request a server-provided
									private key and certificate from an EST server. The evaluator shall confirm that the resulting
									private key and certificate are successfully obtained and installed in the TOE key store. 
								</h:p>	
							</test>
							<test>
								<h:p>
									The evaluator shall modify the EST server to, in response to a server-provided private key and
									certificate request, return a private key that does not correspond with the public key in the
									returned certificate. The evaluator shall use the operational guidance to cause the TOE to request a
									server-provided private key and certificate. The evaluator shall confirm that the TOE does not accept
									the resulting private key and certificate since the private key and public key do not correspond.
								</h:p>	
							</test>
							<test>
								<h:p>
									The evaluator shall configure the EST server to provide a "Root CA Key Update" as described in 
									RFC 7030 Section 4.1.3. The evaluator shall cause the TOE to request CA certificates from the EST
									server and shall confirm that the EST-specific Trust Anchor Database is updated with the new trust
									anchor.
								</h:p>	
							</test>
							<test>
								<h:p>
									The evaluator shall configure the EST server to provide a "Root CA Key Update" as described in
									RFC 7030 Section 4.1.3 but shall modify part of the NewWithOld certificate’s generated signature.
									The evaluator shall cause the TOE to request CA certificates from the EST server and shall confirm
									that the EST-specific Trust Anchor Database is not updated with the new trust anchor since the
									signature did not verify.
								</h:p>	
							</test>
							<test>
								<h:p>
									The evaluator shall use the operational guidance to cause the TOE to generate a certificate request
									message. The evaluator shall capture the generated message and ensure that it conforms to the format
									specified by RFC 2986. The evaluator shall confirm that the certificate request provides the public
									key and other required information, including any necessary user-input information.
								</h:p>	
							</test>
						</testlist>
					</Tests>
				</aactivity>
			</f-element>
			
			
			<audit-event>
				<audit-event-descr>Generation of certificate enrollment request.</audit-event-descr>
				<audit-event-info>Issuer and subject name of EST Server.</audit-event-info>
				<audit-event-info>Method of authentication.</audit-event-info>
				<audit-event-info>Issuer and subject name of certificate used to authenticate.</audit-event-info>
                <audit-event-info>Content of certificate request message.</audit-event-info>
			</audit-event>
			<audit-event>
				<audit-event-descr>Success or failure of enrollment.</audit-event-descr>
				<audit-event-info>Issuer and subject name of added certificate or reason for failure.</audit-event-info>
			</audit-event>
			<audit-event>
				<audit-event-descr>Update of EST trust anchor database.</audit-event-descr>
				<audit-event-info>Subject name of added root CA.</audit-event-info>
			</audit-event>
		</f-component>
		
		<f-component name="Exceptions to X.509 Certificate Revocation Checking" cc-id="fia_x509_ext.5">
			<f-element id="fia-x509-ext-5e1">
				<title>The 
					<selectables>
						<selectable>TSF</selectable>
						<selectable>TOE platform</selectable></selectables>
					shall provide alternate functionality to standard X.509 certificate revocation checking 
					for the following exceptions: 
					<selectables linebreak="yes">
						<selectable>firmware checking of updates: 
							invalidate automatic updates if the firmware certificate is compromised</selectable>
						<selectable><assignable>other exceptions and corresponding functionality</assignable></selectable></selectables>.
					</title>
				<aactivity>
					<TSS>
						<h:p>
							The evaluator shall ensure the TSS describes, for each exception, the alternate functionality the TOE implements to 
							handle the lack of certificate revocation. The description must be consistent with the selection in the requirement.
						</h:p>
					</TSS>
					<Guidance>
						<h:p>
							If revocation exceptions are configurable, 
							the evaluator shall ensure the guidance documentation includes the exceptions that can be configured 
							and the steps for doing this.
						</h:p>
					</Guidance>
					<Tests>
						<h:p>
							For each exception, the evaluator shall configure the TSF as necessary to meet the exceptional condition described and exercise the 
							function using a certificate chain without revocation information. 
							The evaluator shall attempt to examine TSF logs or behavior as described in the TSS to confirm the alternative action 
							described is performed. For example, in the case of firmware updates that invalidate automatic updates, 
							the evaluator shall invoke an automatic update and observe that the update is not performed. 
							In other cases, the TSS describes the alternative action.
						</h:p>
					</Tests>
				</aactivity>
			</f-element>
			<audit-event/>
		</f-component>
	
		<f-component cc-id="fcs_ssh_ext.1" name="SSH Protocol">
	<!-- 
			<comp-lev> requires the TSF to specify the details of its SSH protocol implementation.</comp-lev>
			<management>No specific management functions are identified.</management>
			<audit>The following actions should be auditable if FAU_GEN Security Audit Data Generation is included in the
				PP, PP-Module, FP, or ST:<h:ul>
					<h:li>Failure to establish SSH connection</h:li>
					<h:li>Establishment of SSH connection</h:li>
					<h:li>Termination of SSH connection</h:li>
					<h:li>Dropping of packets outside defined size limits</h:li>
				</h:ul>
			</audit>
			<dependencies>
				FCS_CKM.1 Cryptographic Key Generation<h:br/>
				FCS_CKM.2 Cryptographic Key Derivation<h:br/>
				FCS_COP.1 Cryptographic Operation<h:br/>
				FCS_RBG.1 Random Bit Generation
			</dependencies>
-->
			
			<f-element id="fcs-ssh-ext-1e1">
				<title>The TOE shall implement SSH acting as a
					<selectables>
						<selectable id="ssh-client">client</selectable>
						<selectable id="ssh-server">server</selectable></selectables> 
				that complies with RFCs 4251, 4252, 4253, 4254,
					<selectables>
						<selectable id="sel-rfc4256">4256</selectable>
						<selectable id="sel-rfc4344">4344</selectable>
						<selectable id="sel-rfc5647">5647</selectable>
						<selectable id="sel-rfc5656">5656</selectable>
						<selectable id="sel-rfc6187">6187</selectable>
						<selectable id="sel-rfc6668">6668</selectable>
						<selectable id="sel-rfc8268">8268</selectable>
						<selectable id="sel-rfc8308">8308</selectable>
						<selectable id="sel-rfc8332">8332</selectable>
						<selectable id="sel-rfc8709">8709</selectable>
						<selectable id="sel-rfc8731">8731</selectable>
						<selectable exclusive="yes">no other RFCs</selectable></selectables> and [<h:i>no other standard</h:i>].
				</title>
				<note role="application">
					The following mapping is provided as a guide to ST authors to ensure the appropriate RFC selections are made 
					based on applicable selections in subsequent SFRs: 
					<h:ul>
						<h:li>RFC 4256: Select for keyboard-interactive authentication </h:li>
						<h:li>RFC 4344: Select for AES-128-CTR or AES-256-CTR  </h:li>
						<h:li>RFC 5647: Select for AEAD_AES_128_GCM, AEAD_AES_256_GCM, or aes*-gcm@openssh.com </h:li> 
						<h:li>RFC 5656: Select for elliptic curve cryptography (ECC) </h:li>
						<h:li>RFC 6187: Select for X.509 certificate use </h:li>
						<h:li>RFC 6668: Select for HMAC-SHA-2 algorithms </h:li>
						<h:li>RFC 8268: Select for FFC DH groups with SHA-2  </h:li>
						<h:li>RFC 8308: Select if RFC 8332 is selected </h:li>
						<h:li>RFC 8332: Select if SHA-2 is available with ssh-rsa </h:li>
						<h:li>RFC 8709: Select if ed25519 or ed448 is used as a public key algorithm </h:li>
						<h:li>RFC 8731: Select if curve25519 or curve448 is used for key exchange </h:li> 
					</h:ul>
					<h:p>The ST author selects which of the additional RFCs to which
					conformance is being claimed. An SSH product can implement additional RFCs, but only those
					listed in the selection can be claimed as conformant under CC. 
					The RFC selections for this requirement must be consistent with selections in
					later elements of this FP (e.g., cryptographic algorithms permitted). </h:p>

					<h:p>For the purposes of this package (and subsequent integration into cPPs), only the claimed algorithms listed 
					in the package must be enabled for use.</h:p>

					<h:p>RFC 4253 indicates that certain cryptographic algorithms are "REQUIRED." This means that from the 
					Internet Engineering Task Force's perspective, the implementation must include support, not that the algorithms must 
					be enabled for use. For the purposes of this SFR's EA and this FP
					overall, it is not necessary to ensure that algorithms listed as "REQUIRED" by the RFC 
					but not listed in later elements of this FP are actually implemented.</h:p>

					<h:p>RFC 4344 must be selected if aes128-ctr or aes256-ctr is selected in FCS_SSH_EXT.1.4.</h:p>

					<h:p>RFC 4356 must be selected if "keyboard-interactive" is selected in FCS_SSH_EXT.1.2.</h:p>

					<h:p>RFC 5647 must be selected when AEAD_AES_128_GCM, AEAD_AES_256_GCM, aes128-gcm@openssh.com, or
					aes256-gcm@openssh.com is selected as an encryption algorithm in FCS_SSH_EXT.1.4 
					and when AEAD_AES_128_GCM or AEAD_AES_256_GCM is selected as MAC algorithm in FCS_SSH_EXT.1.5.</h:p>

					<h:p>RFC 5656 must be selected when ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, ecdsa-sha2-nistp521 is selected as a public key algorithm
					in FCS_SSH_EXT.1.2, or when ecdh-sha2-nistp256, ecdh-sha2-nistp384, or ecdh-sha2-nistp521 is selected
					as a key exchange algorithm in FCS_SSH_EXT.1.6, or when "RFC 5656" is selected in FCS_SSH_EXT.1.7.</h:p>

					<h:p>RFC 6187 must be selected when x509v3-ecdsa-sha2-nistp256, x509v3-ecdsa-sha2-nistp384, x509v3-ecdsa-sha2-nistp521,
					or x509v3-rsa2048-sha256 is selected as a public key algorithm in FCS_SSH_EXT.1.2.</h:p>

					<h:p>RFC 6668 must be selected when hmac-sha2-256 or hmac-sha2-512 is selected as a MAC algorithm in FCS_SSH_EXT.1.5.</h:p>

					<h:p>RFC 8268 must be selected when diffie-hellman-group14-sha256, diffie-hellman-group15-sha512,   
						diffie-hellman-group16-sha512, diffie-hellman-group17-sha512, or diffie-hellman-group18-sha512
						is selected as a key exchange algorithm in FCS_SSH_EXT.1.6.</h:p>

					<h:p>RFC 8332 must be selected when rsa-sha2-256 or rsa-sha2-512 is selected as a public key algorithm in
					FCS_SSH_EXT.1.2.</h:p>

					<h:p>RFC 8709 must be selected when ssh-ed25519 or ssh-ed448 is selected as a public key algorithm in
					FCS_SSH_EXT.1.2.</h:p>
					
					<h:p>RFC 8731 must be selected when curve25519-sha256 or curve448-sha512 is selected as a key exchange 
						algorithm in FCS_SSH_EXT.1.6.</h:p>						

					<h:p>If "client" is selected, then the ST must include FCS_SSHC_EXT.1.</h:p>
					<h:p>If "server" is selected, then the ST must include FCS_SSHS_EXT.1.</h:p>
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall ensure that the selections indicated in the ST are consistent with selections in this element
						and subsequent element. Otherwise, this SFR is evaluated by activities for other SFRs. <h:p/>
					</TSS>
					<Guidance>
						There are no guidance EAs for this element. This SFR is evaluated by activities for other SFRs.<h:p/>
					</Guidance>
					<Tests>
						There are no test EAs for this element. This SFR is evaluated by activities for other SFRs.<h:p/>
					</Tests>
				</aactivity>
			</f-element>
			<f-element id="fcs-ssh-ext-1e2">
				<title>
					The TSF shall ensure that the SSH protocol implementation supports the following authentication methods: 
					<selectables linebreak="yes">
						<selectable>“password” (RFC 4252)</selectable>
						<selectable>“keyboard-interactive” (RFC 4256)</selectable> 
						<selectable>“publickey” (RFC 4252): 
							<selectables linebreak="yes">
								<selectable>ssh-rsa (RFC 4253)</selectable>  
								<selectable>rsa-sha2-256 (RFC 8332)</selectable> 
								<selectable>rsa-sha2-512 (RFC 8332)</selectable> 
								<selectable>ecdsa-sha2-nistp256 (RFC 5656)</selectable>  
								<selectable>ecdsa-sha2-nistp384 (RFC 5656)</selectable> 
								<selectable>ecdsa-sha2-nistp521 (RFC 5656)</selectable>
								<selectable>ssh-ed25519 (RFC 8709)</selectable>
								<selectable>ssh-ed448 (RFC 8709)</selectable>
								<selectable>x509v3-ecdsa-sha2-nistp256 (RFC 6187)</selectable> 
								<selectable>x509v3-ecdsa-sha2-nistp384 (RFC 6187)</selectable> 
								<selectable>x509v3-ecdsa-sha2-nistp521 (RFC 6187)</selectable>
								<selectable>x509v3-rsa2048-sha256  (RFC 6187)</selectable> 
							</selectables>
						</selectable>
					</selectables> and no other methods.
				</title>
		 
				<ext-comp-def-title>
					<title>
						The TSF shall ensure that the SSH protocol implementation supports the following authentication methods: 
						<assignable>supported authentication methods</assignable> and no other methods.
					</title>
				</ext-comp-def-title>
			
				<note role="application">
					Within SSH there are two types of authentication: user authentication and peer authentication. This SFR 
					deals with the options supported for user authentication. Peer authentication is covered in
					FCS_SSHS_EXT.1.1 (for servers) and FCS_SSHC_EXT.1.1 (for clients).
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall check to ensure that the authentication methods listed in the TSS are identical to those claimed 
						in this element; that if password-based authentication methods have been claimed in the ST, 
						then the TSS also describes these; and that if keyboard-interactive is selected, 
						the TSS describes the multifactor authentication mechanisms provided by the TOE.<h:p/>
					</TSS>	
					<Guidance>
						The evaluator shall check the guidance documentation to ensure the configuration options, if any, for
						authentication mechanisms provided by the TOE are described.<h:p/>
					</Guidance>
					<Tests>
						<testlist>
							<test> [conditional] If the TOE is acting as an SSH server: <h:p/>
								<h:ol type="a">
									<h:li>The evaluator shall use a suitable SSH client to connect to the TOE, enable debug messages
										in the SSH client, and examine the debug messages to determine that only the configured authentication
										methods for the TOE were offered by the server. </h:li>
									<h:li>[conditional] If the SSH server supports X.509-based client authentication options: 
										<h:ol type="i">
											<h:li>The evaluator shall initiate an SSH session from a client where the username is
												associated with the X.509 certificate. The evaluator shall verify the session is successfully
												established. </h:li>
											<h:li>Next the evaluator shall use the same X.509 certificate as above, but include a 
												username not associated with the certificate. The evaluator shall verify that the
												session does not establish.</h:li>
											<h:li>Finally, the evaluator shall use the correct username (from step a above), but use 
												a different X.509 certificate which is not associated with the username. The evaluator
												shall verify that the session does not establish. </h:li>
										</h:ol>
									</h:li>
								</h:ol>
							</test>
							<test>[conditional] If the TOE is acting as an SSH client, the evaluator shall test for a successful 
								configuration setting of each authentication method as follows:
								<h:ol type="a">
									<h:li>The evaluator shall initiate an SSH session using the authentication method configured and
										verify that the session is successfully established.</h:li>
									<h:li>Next, the evaluator shall use bad authentication data (e.g., incorrectly generated 
										certificate or incorrect password) and ensure that the connection is rejected. </h:li>
								</h:ol>
							  Steps a-b shall be repeated for each independently configurable authentication method supported by the server. 
							</test>
							<test>
								[conditional] If the TOE is acting as an SSH client, the evaluator shall verify that the connection
								fails upon configuration mismatch as follows: 
								<h:ol type="a">
									<h:li>The evaluator shall configure the client with an authentication method not supported by
										the server.  </h:li>
									<h:li>The evaluator shall verify that the connection fails. </h:li>
								</h:ol>
							</test>	
						</testlist>
						If the client supports only one authentication method, the evaluator can test this failure of connection by
						configuring the server with an authentication method not supported by the client. In order to facilitate
						this test, it is acceptable for the evaluator to configure an authentication method that is outside of the 
						selections in the SFR.<h:p/>
					</Tests>
				</aactivity>
			</f-element>
			<f-element id="fcs-ssh-ext-1e3">
				<title>
					The TSF shall ensure that, as described in RFC 4253, packets greater than 
					<assignable>number of bytes between 35 KB and 1 GB (inclusive)</assignable>
					in an SSH transport connection are dropped.
				</title>
				<note role="application">
					RFC 4253, Section 6.1 provides for the acceptance of “large packets” with the caveat that the packets should
					be of “reasonable length” or dropped. The assignment should be filled in by the ST author with the maximum packet 
					size accepted, thus defining “reasonable length” for the TOE. <h:p/>
					The upper bound on the packet size is driven by the size identified in FCS_SSH_EXT.1.8.
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall check that the TSS describes how “large packets” are detected and handled. <h:p/>
					</TSS>
					<Guidance>
						There are no guidance EAs for this element. <h:p/>
					</Guidance>
					<Tests>
						<testlist>
							<test>The evaluator shall demonstrate that the TOE accepts the maximum allowed packet size.</test>
							<test>This test is performed to verify that the TOE drops packets that are larger than the size
								specified in the element.
								<h:ol type="a">
									<!-- updated for TD0732 -->
									<h:li>The evaluator shall establish a successful SSH connection with the peer. </h:li> 	
									<h:li>Next, the evaluator shall craft a packet that is slightly larger than the maximum
										size specified in this element and send it through the established SSH connection
										to the TOE. The packet should not be greater than the maximum packet size + 16 bytes. 
										If the packet is larger, the evaluator shall justify the need to send a larger packet.</h:li>
									<h:li>The evaluator shall verify that the packet was dropped by the TOE. The method of verification will vary by the TOE.
										Examples include reviewing the TOE audit log for a dropped packet audit or observing that 
										the TOE terminates the connection.</h:li>
								</h:ol>
							</test>
						</testlist><h:p/>
					</Tests>
				</aactivity>
			</f-element>
			<f-element id="fcs-ssh-ext-1e4">
				<title>
					The TSF shall protect data in transit from unauthorised disclosure using the following mechanisms: 
					<selectables linebreak="yes">
						<selectable>aes128-ctr (RFC 4344)</selectable>  
						<selectable>aes256-ctr (RFC 4344)</selectable>
						<selectable>aes128-cbc (RFC 4253)</selectable>
						<selectable>aes256-cbc (RFC 4253)</selectable>
						<selectable>AEAD_AES_128_GCM (RFC 5647)</selectable> 
						<selectable>AEAD_AES_256_GCM (RFC 5647)</selectable> 
						<selectable>aes128-gcm@openssh.com (RFC 5647)</selectable> 
						<selectable>aes256-gcm@openssh.com (RFC 5647)</selectable>
					</selectables> and no other mechanisms.
				</title>
				<ext-comp-def-title>
					<title>
						The TSF shall protect data in transit from unauthorised disclosure using the following mechanisms: 
						<assignable>confidentiality mechanisms</assignable> and no other mechanisms.
					</title>
				</ext-comp-def-title>
				<note role="application">
					As described in RFC 5647, AEAD_AES_128_GCM and AEAD_AES_256_GCM need the corresponding MAC algorithm to be
					selected in FCS_SSH_EXT.1.5.
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall check the description of the implementation of SSH in the TSS to ensure the encryption
						algorithms supported are specified. The evaluator shall check the TSS to ensure that the encryption algorithms
						specified are identical to those listed for this element.<h:p/>
					</TSS>
					<Guidance>
						The evaluator shall check the guidance documentation to ensure that it contains instructions to the
						administrator on how to ensure that only the allowed mechanisms are used in SSH connections with the TOE.<h:p/> 
					</Guidance>
					<Tests>
						The evaluator shall perform the following tests.  <h:p/>
						If the TOE can be both a client and a server, these tests must be performed for both roles. 
						<testlist>
							<test>The evaluator shall ensure that only claimed algorithms and cryptographic primitives are used to 
								establish an SSH connection. To verify this, the evaluator shall establish an SSH connection with a 
								remote endpoint. The evaluator shall capture the traffic exchanged between the TOE and the remote
								endpoint during protocol negotiation (e.g., using a packet capture tool or information provided by 
								the endpoint, respectively). The evaluator shall verify from the captured traffic that the TOE
								offers only the algorithms defined in the ST for the TOE for SSH connections. The evaluator shall
								perform one successful negotiation of an SSH connection and verify that the negotiated algorithms 
								were included in the advertised set. If the evaluator detects that not all algorithms defined in
								the ST for SSH are advertised by the TOE or the TOE advertises additional algorithms not defined in 
								the ST for SSH, the test shall be regarded as failed.<h:p/>
								The data collected from the connection above shall be used for verification of the advertised
								hashing and shared secret establishment algorithms in FCS_SSH_EXT.1.5 and FCS_SSH_EXT.1.6 respectively. 
							</test>
							<test>For the connection established in Test 1, the evaluator shall terminate the connection and observe
								that the TOE terminates the connection.</test>
							<test>The evaluator shall configure the remote endpoint to only allow a mechanism that is not included in 
								the ST selection. The evaluator shall attempt to connect to the TOE and observe that the attempt fails.</test>
						</testlist><h:p/>
					</Tests>
				</aactivity>
			</f-element>
			<f-element id="fcs-ssh-ext-1e5">
				<title>
					The TSF shall protect data in transit from modification, deletion, and insertion using: 
					<selectables linebreak="yes">
<!--						<selectable>hmac-sha1 (RFC 4253)</selectable>  -->
						<selectable>hmac-sha2-256 (RFC 6668)</selectable> 
						<selectable>hmac-sha2-512 (RFC 6668)</selectable>
						<selectable>AEAD_AES_128_GCM (RFC 5647)</selectable>
						<selectable>AEAD_AES_256_GCM (RFC 5647)</selectable>
						<selectable>implicit</selectable></selectables> and no other mechanisms.
				</title>
				<ext-comp-def-title>
					<title>
						The TSF shall protect data in transit from modification, deletion, and insertion using: 
						<assignable>data integrity mechanisms</assignable> and no other mechanisms.
					</title>
				</ext-comp-def-title>
				<note role="application">
					As described in RFC 5647, AEAD_AES_128_GCM and AEAD_AES_256_GCM need the corresponding encryption algorithm 
					to be selected. <h:p/>
					In AES-GCM mode, integrity is not provided using a MAC, it is implicit in AES-GCM mode itself. There is no need
					for a corresponding FCS_COP element. The FCS_COP element for AES would already cover this. <h:p/>
					If the negotiated encryption algorithm is one of the aes*-gcm@openssh.com algorithms, then the MAC field is 
					ignored during negotiation and implicitly selects AES-GCM for the MAC. “implicit” is not an SSH identifier and
					will not be seen on the wire; however, the negotiated MAC might be decoded as “implicit.”<h:p/>
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall check the description of the implementation of SSH in the TSS to ensure the hashing
						algorithms supported are specified. The evaluator shall check the TSS to ensure that the hashing algorithms 
						specified are identical to those listed for this element. <h:p/>
					</TSS>
					<Guidance>
						The evaluator shall check the guidance documentation to ensure that it contains instructions to the 
						administrator on how to ensure that only the allowed mechanisms are used in SSH connections with the TOE. <h:p/>
					</Guidance>
					<Tests>
						<testlist>
							<test> The evaluator shall use the test data collected in FCS_SSH_EXT.1.4, Test 1 to verify that
								appropriate mechanisms are advertised.</test>
							<test> The evaluator shall configure an SSH peer to allow only a hashing algorithm that is not included
								in the ST selection. The evaluator shall attempt to establish an SSH connection and observe that 
								the connection is rejected.</test>
						</testlist><h:p/>
					</Tests>
				</aactivity>
			</f-element>
			<f-element id="fcs-ssh-ext-1e6">
				<title>
					The TSF shall establish a shared secret with its peer using: 
					<selectables linebreak="yes">
<!--						<selectable>diffie-hellman-group14-sha1 (RFC 4253)</selectable>  -->
						<selectable>diffie-hellman-group14-sha256 (RFC 8268)</selectable>  
						<selectable>diffie-hellman-group15-sha512 (RFC 8268)</selectable>  
						<selectable>diffie-hellman-group16-sha512 (RFC 8268)</selectable>  
						<selectable>diffie-hellman-group17-sha512 (RFC 8268)</selectable>  
						<selectable>diffie-hellman-group18-sha512 (RFC 8268)</selectable> 
						<selectable>ecdh-sha2-nistp256 (RFC 5656)</selectable> 
						<selectable>ecdh-sha2-nistp384 (RFC 5656)</selectable>
						<selectable>ecdh-sha2-nistp521 (RFC 5656)</selectable>  
						<selectable>curve25519-sha256 (RFC 8731)</selectable>
						<selectable>curve448-sha512 (RFC 8731)</selectable> 
					</selectables> and no other mechanisms.
				</title>
				<ext-comp-def-title>
					<title>
						The TSF shall establish a shared secret with its peer using: 
						<assignable>key agreement mechanisms</assignable> and no other mechanisms.
					</title>
				</ext-comp-def-title>
				<aactivity level="element">
					<TSS>
						The evaluator shall check the description of the implementation of SSH in the TSS to ensure the shared
						secret establishment algorithms supported are specified. The evaluator shall check the TSS to ensure that
						the shared secret establishment algorithms specified are identical to those listed for this element.<h:p/>
					</TSS>
					<Guidance>
						The evaluator shall check the guidance documentation to ensure that it contains instructions to the administrator 
						on how to ensure that only the allowed mechanisms are used in SSH connections with the TOE. <h:p/>
					</Guidance>
					<Tests>
						<testlist>
							<test>The evaluator shall use the test data collected in FCS_SSH_EXT.1.4, Test 1 to verify that appropriate 
								mechanisms are advertised.</test>
							<test>The evaluator shall configure an SSH peer to allow only a key exchange method that is not included in the
								ST selection. The evaluator shall attempt to establish an SSH connection and observe that the
								connection is rejected.</test>
						</testlist><h:p/>
					</Tests>
				</aactivity>
			</f-element>
			<f-element id="fcs-ssh-ext-1e7">
				<title>
					The TSF shall use an SSH key derivation function (KDF) as defined in 
					<selectables linebreak="yes">
						<selectable>RFC 4253, Section 7.2</selectable> 
						<selectable> RFC 5656, Section 4 </selectable>
					</selectables>
					to derive the following cryptographic keys from a shared secret: session keys.
				</title>
				<note role="application">
					RFC 4253 must be selected when the key establishment scheme (selected in FCS_SSH_EXT.1.6) uses finite field 
					cryptography (FFC) and RFC 5656 when it uses ECC.  <h:p/>
					RFC 4253, Section 7.2 defines two KDFs for FFC-based key establishment schemes.  Therefore, RFC 4253 should be 
					selected if any of the RFC 4253 or RFC 8268 key establishment schemes are selected. <h:p/>
					RFC 5656, Section 4 defines KDFs used in ECC key establishment schemes and should be selected when RFC 5656 or 
					RFC 8731 key establishment schemes are selected.
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall check the description of the implementation of SSH in the TSS to ensure the supported KDFs 
						are specified. The evaluator shall check the TSS to ensure that the KDFs specified are identical to those listed 
						for this element.<h:p/>
					</TSS>
					<Guidance>
						There are no guidance EAs for this element.<h:p/>
					</Guidance>
					<Tests>
						There are no test EAs for this element.
					</Tests>
				</aactivity>
			</f-element>
			<f-element id="fcs-ssh-ext-1e8">
				<title>
					The TSF shall ensure that 
					<selectables linebreak="yes">
						<selectable>a rekey of the session keys</selectable> 	 
						<selectable>connection termination</selectable>
					</selectables>
					occurs when any of the following thresholds are met: 
					<h:ul>
						<h:li>one hour connection time</h:li>
						<h:li>no more than one gigabyte of transmitted data, or</h:li>
						<h:li>no more than one gigabyte of received data.</h:li>
					</h:ul>
				</title>
				<note role="application">
					This SFR defines three thresholds that need to be implemented. These thresholds were arrived at to ensure 
					that the cryptographic key space for the symmetric session keys isn’t exhausted (more detail can be found in
					RFC 4344 and RFC 4253). A rekey or connection termination needs to be performed whenever a threshold is reached 
					for a given connection. The rekey applies to all session keys (encryption, integrity protection) for incoming and 
					outgoing traffic.  <h:p/>
					It is acceptable for a TOE to implement lower thresholds than the maximum values defined in the SFR. If a 
					threshold is configurable, the guidance documentation needs to specify how to configure that threshold. <h:p/>
					It is possible that hardware limitation may prevent reaching data transfer threshold in less than one hour. In 
					cases where data transfer threshold could not be reached due to hardware limitations, it is acceptable to omit
					testing of this (SSH rekeying based on data transfer threshold). See EAs for details.<h:p/>
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall check the TSS to ensure that if the TOE enforces connection rekey or termination limits
						lower than the maximum values, that these lower limits are identified.  <h:p/>
						In cases where hardware limitation will prevent reaching the data transfer threshold in less than one hour, the
						evaluator shall check the TSS to ensure it contains: 
						<h:ol type="a">
							<h:li>An argument describing this hardware-based limitation and </h:li>
							<h:li>Identification of the hardware components that form the basis of such argument. </h:li>
						</h:ol>
						For example, if specific Ethernet Controller or Wi-Fi radio chip is the root cause of such
						limitation, these subsystems shall be identified.<h:p/>
					</TSS>
					<Guidance>
						The evaluator shall check the guidance documentation to ensure that if the connection rekey or termination 
						limits are configurable, it contains instructions to the administrator on how to configure the relevant 
						connection rekey or termination limits for the TOE. <h:p/>
					</Guidance>
					<Tests>
						The test harness needs to be configured so that its connection rekey or termination limits are greater than
						the limits supported by the TOE. It is expected that the test harness should not be initiating the
						connection rekey or termination. <h:p/>
						<testlist>
							<test>Establish an SSH connection.  Wait until the identified connection rekey limit is met.  Observe 
								that a connection rekey or termination is initiated.  This may require traffic to periodically be sent or 
								a keep-alive setting for the connection to be applied to ensure that the connection is not closed due to an idle
								timeout. </test>
							<test>Establish an SSH connection.  Transmit data from the TOE until the identified connection rekey or
								termination limit is met.  Observe that a connection rekey or termination is initiated. </test>
							<test> Establish an SSH connection.  Send data to the TOE until the identified connection rekey limit or
								termination is met.  Observe that a connection rekey or termination is initiated.</test>
						</testlist><h:p/>
					</Tests>
				</aactivity>
			</f-element>
			<audit-event type="optional">
				<audit-event-descr>Failure to establish SSH connection</audit-event-descr>
				<audit-event-info>Reason for failure.</audit-event-info>
				<audit-event-info type="optional">Non-TOE endpoint of attempted connection (IP Address)</audit-event-info>
			</audit-event>
			<audit-event type="optional">
			<audit-event-descr>Establishment of SSH connection</audit-event-descr>
				<audit-event-info type="optional">Non-TOE endpoint of connection (IP Address)</audit-event-info>
			</audit-event>
			<audit-event type="optional">
				<audit-event-descr>Termination of SSH connection session</audit-event-descr>
				<audit-event-info type="optional">Non-TOE endpoint of connection (IP Address)</audit-event-info>
			</audit-event>
			<audit-event type="optional">
				<audit-event-descr>Dropping of packets outside defined size limits</audit-event-descr>
				<audit-event-info type="optional">Packet size</audit-event-info>
			</audit-event>
		</f-component>

<!-- 			-->
<!-- FCS_SSHC_EXT.1	-->
<!--			-->	
		
		<ext-comp-def fam-id="FCS_SSHC_EXT" title="SSH Client Protocol">
			<fam-behavior>This family defines requirements for implementation of the SSH protocol when the TSF is acting as a client.
			</fam-behavior>
		</ext-comp-def>
		
    <f-component cc-id="fcs_sshc_ext.1" name="SSH Client Protocol" status="sel-based">
		<depends on="ssh-client"/>
    <!-- 	
    	<comp-lev> requires the TSF to specify the details of its SSH client implementation.</comp-lev>
    	<management>No specific management functions are identified.</management>
    	<audit>There are no auditable events foreseen.</audit>
    	<dependencies>
    		FCS_SSH_EXT.1 SSH Protocol
    	</dependencies>
  -->  	
    	
		<f-element id="fcs-sshc-ext-1e1">
			<title>The TSF shall authenticate its peer (SSH server) using: 
				<selectables linebreak="yes">
					<selectable>using a local database by associating each host name with a public key corresponding to the following list:
						<selectables linebreak="yes">
							<selectable>ssh-rsa (RFC 4253)</selectable> 
							<selectable>rsa-sha2-256 (RFC 8332)</selectable> 
							<selectable>rsa-sha2-512 (RFC 8332)</selectable>
							<selectable>ecdsa-sha2-nistp256 (RFC 5656)</selectable>
							<selectable>ecdsa-sha2-nistp384 (RFC 5656)</selectable>
							<selectable>ecdsa-sha2-nistp521 (RFC 5656)</selectable>
							<selectable>ssh-ed25519 (RFC 8709)</selectable>
							<selectable>ssh-ed448 (RFC 8709)</selectable>
						</selectables>
					</selectable>
					<selectable>a list of trusted certification authorities when the public key is in the following formats:
						<selectables linebreak="yes">
							<selectable>x509v3-ecdsa-sha2-nistp256 (RFC 6187)</selectable>  
							<selectable>x509v3-ecdsa-sha2-nistp384 (RFC 6187)</selectable>  
							<selectable>x509v3-ecdsa-sha2-nistp521 (RFC 6187)</selectable>  
							<selectable>x509v3-rsa2048-sha256  (RFC 6187)</selectable>
						</selectables>
					</selectable>
				</selectables>
				as described in RFC 4251, Section 4.1.
			</title>
			<ext-comp-def-title>
				<title>The TSF shall authenticate its peer (SSH server) using: 
					<assignable>peer authentication method</assignable>
					as described in RFC 4251, Section 4.1.
				</title>
			</ext-comp-def-title>
			<note role="application">
				The local database may be implemented using any equivalent local storage mechanism.
			</note>
			<aactivity>
				<TSS>
					There are no TSS EAs for this component.<h:p/>
				</TSS>
				<Guidance>
					The evaluator shall check the guidance documentation to ensure that it contains instructions to the 
					administrator on how to ensure that only the allowed mechanisms are used in SSH connections with the TOE.<h:p/>
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests: 
					<testlist>
						<test>[conditional] If using a local database by associating each host name with its corresponding public 
							key, the evaluator shall configure the TOE with only a single host name and corresponding public key in
							the local database. The evaluator shall verify that the TOE can successfully connect to the host identified
							by the host name.</test>
						<test>[conditional] If using a local database by associating each host name with its corresponding public key,
							the evaluator shall configure the TOE with only a single host name and non-corresponding public key in 
							the local database. The evaluator shall verify that the TOE fails to connect to a host not identified by 
							the host name. </test>
						<test>[conditional] If using a local database by associating each host name with its corresponding public
							key, the evaluator shall try to connect to a host not configured in the local database. The evaluator 
							shall verify that the TOE either fails to connect to a host identified by the host name or there is a prompt
							provided to store the public key in the local database. </test>
						<test>[conditional] If using a list of trusted certification authorities, the evaluator shall configure the
							TOE with only a single trusted certification authority corresponding to the host. The evaluator shall 
							verify that the TOE can successfully connect to the host identified by the host name.</test>
						<test>[conditional] If using a list of trusted certification authorities, the evaluator shall configure the 
							TOE with only a single trusted certification authority that does not correspond to the host. The evaluator 
							shall verify that the TOE fails to the host identified by the host name.</test>
					</testlist><h:p/>
				</Tests>
			</aactivity>
		</f-element>
       <audit-event/>
    </f-component>

<!-- 			-->
<!-- FCS_SSHS_EXT.1	-->
<!--			-->	
		<ext-comp-def fam-id="FCS_SSHS_EXT" title="SSH Server Protocol">
			<fam-behavior>This family defines requirements for implementation of the SSH protocol when the TSF is acting as a server.
			</fam-behavior>
		</ext-comp-def>
		
    <f-component cc-id="fcs_sshs_ext.1" name="SSH Server Protocol" status="sel-based">
		<depends on="ssh-server"/>
    <!-- 	
    	<comp-lev> requires the TSF to specify the details of its SSH server implementation.</comp-lev>
    	<management>No specific management functions are identified.</management>
    	<audit>There are no auditable events foreseen.</audit>
    	<dependencies>
    		FCS_SSH_EXT.1 SSH Protocol
    	</dependencies>
    	-->
		<f-element id="fcs-sshs-ext-1e1"> 
			<title>The TSF shall authenticate itself to its peer (SSH client) using:
				<selectables linebreak="yes">
					<selectable>ssh-rsa (RFC 4253)</selectable>
					<selectable>rsa-sha2-256 (RFC 8332)</selectable>
					<selectable>rsa-sha2-512 (RFC 8332)</selectable>
					<selectable>ecdsa-sha2-nistp256 (RFC 5656)</selectable> 
					<selectable>ecdsa-sha2-nistp384 (RFC 5656)</selectable>
					<selectable>ecdsa-sha2-nistp521 (RFC 5656)</selectable> 
					<selectable>x509v3-ecdsa-sha2-nistp256 (RFC 6187)</selectable> 
					<selectable>x509v3-ecdsa-sha2-nistp384 (RFC 6187)</selectable> 
					<selectable>x509v3-ecdsa-sha2-nistp521 (RFC 6187)</selectable>
					<selectable>x509v3-rsa2048-sha256  (RFC 6187)</selectable>
					<selectable>ssh-ed25519 (RFC 8709)</selectable>
					<selectable>ssh-ed448 (RFC 8709)</selectable>
				</selectables>.
			</title>
			<ext-comp-def-title>
				<title>The TSF shall authenticate itself to its peer (SSH client) using: 
					<assignable>peer authentication method</assignable>.
				</title>
			</ext-comp-def-title>
			<note role="application">
				These requirements relate to the server authenticating to the client. The client authenticating to the server is covered
				in FCS_SSHC_EXT.1.1.
			</note>
			<aactivity>
				<TSS>
					There are no TSS EAs for this component.<h:p/>
				</TSS>
				<Guidance>
					The evaluator shall check the guidance documentation to ensure that it contains instructions to the administrator
					on how to ensure that only the allowed mechanisms are used in SSH connections with the TOE. <h:p/>
				</Guidance>
				<Tests>
					<!-- updated by TD0682 -->
					The evlauator shall perform the following tests:
					<testlist>
						<test>The evaluator shall use a suitable SSH client to connect to the TOE and examine the list of server host key algorithms 
							in the SSH_MSG_KEXINIT packet sent from the server to the client to determine that 
							only the configured server authentication methods for the TOE were offered by the server.</test>
						<test>The evaluator shall test for a successful configuration setting of each server authentication method as follows. 
							The evaluator shall initiate an SSH session using the authentication method configured and verify that the session is 
							successfully established. Repeat this process for each independently configurable server authentication method supported by the server.</test>
						<test>The evaluator shall configure the peer to only allow an authentication mechanism that is not included in the ST selection. 
							The evaluator shall attempt to connect to the TOE and observe that the TOE sends a disconnect message.</test>
					</testlist>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>
</sec:fia>

</sec:Security_Functional_Requirements>
  
<!--                    -->
<!-- Appendix A: Optional Requirements 	-->
<!--                    -->
	
<appendix id="appendix-optional-plus" title="Optional Requirements">  

    <!-- Contents of the appendix are totally generated by "optional-appendix-plus" xsl template. 
         Includes boilerplate, headers, audit table. So the below is not needed. But there is is. -->
    <!--    <audit-table table="optional">
	  Auditable events for Optional SFRs:<h:br/><h:br/>
	</audit-table>  -->
</appendix> 

<!--                    -->
<!-- Appendix B: Selection-based Requirements 	-->
<!--                    -->

    <appendix id="appendix-sel-based" title="Selection-Based Requirements"> 
       
    <!-- Contents of the appendix are totally generated by "optional-appendix" xsl template. 
         Includes boilerplate, headers, audit table. So the below is not needed. But there is is. -->
    <!--    <audit-table table="sel-based">
	  Auditable events for Selecton-based Requirements:	
	</audit-table>   -->
    </appendix> 
	
<!--                    -->
<!-- Appendix C: References 	-->
<!--                    -->
	
   <bibliography>
		<entry id="bibGPOS">
			<tag>GPOSPP</tag>
			<description>
				<h:a href="https://www.niap-ccevs.org/Profile/Info.cfm?id=442">Protection Profile for General Purpose Operating Systems</h:a>
			</description>
		</entry>
		<entry id="bibMDM">
			<tag>MDMPP</tag>
			<description>
				<h:a href="https://www.niap-ccevs.org/Profile/Info.cfm?id=428">Protection Profile for Mobile Device Management</h:a>
			</description>
		</entry>
		<entry id="bibAppPP">
			<tag>AppPP</tag>
			<description>
				<h:a href="https://www.niap-ccevs.org/Profile/Info.cfm?id=429">Protection Profile for Application Software</h:a>
			</description>
		</entry>
		<entry id="bibVirt">
			<tag>VirtPP</tag>
			<description>
				<h:a href="https://www.niap-ccevs.org/Profile/Info.cfm?id=408">Protection Profile for Virtualization</h:a>
			</description>
		</entry>  
   	<entry id="bibCEM">
   		<tag>CEM</tag>
   		<description>
   			<h:a href="https://commoncriteriaportal.org/files/ccfiles/CEM2022R1.pdf">Common
   				Methodology for Information Technology Security - Evaluation Methodology</h:a>,
   			CCMB-2022-11-006, CEM:2022, Revision 1, November 2022. </description>
   	</entry>
		<entry id="bibOpenssh">
			<tag>openssh-portable/ PROTOCOL</tag>
			<description>
				<h:a href="https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/PROTOCOL?rev=1.31">OpenSSH's deviations and extensions (1.6 transport: AES-GCM) </h:a>
			</description>
		</entry>   
		<entry id="bibRFC4251">
			<tag>RFC 4251</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4251">The Secure Shell (SSH) Protocol Architecture </h:a>
			</description>
		</entry>   
		<entry id="bibRFC4252 ">
			<tag>RFC 4252 </tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4252">The Secure Shell (SSH) Authentication Protocol</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4253">
			<tag>RFC 4253</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4253">The Secure Shell (SSH) Transport Layer Protocol</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4254">
			<tag>RFC 4254</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4254">The Secure Shell (SSH) Connection Protocol</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4256">
			<tag>RFC 4256</tag>
			<description>
				<h:a href="https://www.ietf.org/rfc/rfc4256.txt">Generic Message Exchange Authentication for the Secure Shell Protocol (SSH)</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4344">
			<tag>RFC 4344</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4344">The Secure Shell (SSH) Transport Layer Encryption Modes</h:a>
			</description>
		</entry>   
		<entry id="bibRFC5647">
			<tag>RFC 5647</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc5647">AES Galois Counter Mode for the Secure Shell Transport Layer Protocol</h:a>
			</description>
		</entry>   
		<entry id="bibRFC5656">
			<tag>RFC 5656</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc5656">Elliptic Curve Algorithm Integration in the Secure Shell Transport Layer</h:a>
			</description>
		</entry>   
		<entry id="bibRFC6187">
			<tag>RFC 6187</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc6187">X.509v3 Certificates for Secure Shell Authentication</h:a>
			</description>
		</entry>   
		<entry id="bibRFC6668">
			<tag>RFC 6668</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc6668">SHA-2 Data Integrity Verification for the Secure Shell (SSH) Transport Layer Protocol</h:a>
			</description>
		</entry>   
		<entry id="bibRFC8268">
			<tag>RFC 8268</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc8268">More Modular Exponentiation (MODP) Diffie-Hellman (DH) Key Exchange (KEX) Groups for Secure Shell (SSH)</h:a>
			</description>
		</entry>   
		<entry id="bibRFC8308">
			<tag>RFC 8308</tag>
			<description>
				<h:a href="https://www.ietf.org/rfc/rfc8308.txt">Extension Negotiation in the Secure Shell (SSH) Protocol</h:a>
			</description>
		</entry>   
		<entry id="bibRFC8332">
			<tag>RFC 8332</tag>
			<description>
				<h:a href="https://www.ietf.org/rfc/rfc8332.txt">Use of RSA Keys with SHA-256 and SHA-512 in the Secure Shell (SSH) Protocol</h:a>
			</description>
		</entry>   
		<entry id="bibRFC8709">
			<tag>RFC 8709</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc8709">Ed25519 and Ed448 public key algorithms for the Secure Shell (SSH) protocol </h:a>
			</description>
		</entry>   
		<entry id="bibRFC8731">
			<tag>RFC 8731</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc8731">Secure Shell (SSH) Key Exchange Method using Curve25519 and Curve448</h:a>
			</description>
		</entry>   
    </bibliography>
</Package>
